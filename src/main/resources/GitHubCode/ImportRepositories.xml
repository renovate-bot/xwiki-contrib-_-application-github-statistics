<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>GitHubCode</web>
<name>ImportRepositories</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>GitHubCode.WebHome</parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1329502417000</creationDate>
<date>1329508313000</date>
<contentUpdateDate>1329508313000</contentUpdateDate>
<version>1.1</version>
<title>Import Repositories</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.1</syntaxId>
<hidden>false</hidden>
<content>Import repositories from GitHub into this wiki.

{{groovy}}
import groovy.json.*

if (request.organization != null) {
  // Perform the import
  def url = "https://api.github.com/users/${request.organization}/repos".toURL().text
  def reposJSON = new JsonSlurper().parseText(url)

  reposJSON.each() {
    // Create new page to represent the imported Repository
    def repoDoc = xwiki.getDocument("GitHub", "${it.name} Repository")
    if (repoDoc.isNew()) {
      repoDoc.setTitle("Repository for [${it.name}]")
      repoDoc.setParent("GitHub.WebHome")
      def repoObject = repoDoc.newObject("GitHubCode.RepositoryClass")
      repoObject.set("id", it.name)
      repoObject.set("giturl", it.git_url)
      repoObject.set("htmlurl", it.html_url)
      repoObject.set("name", it.name)
      repoObject.set("organization", request.organization)
      repoDoc.save("Imported Repository [${it.name}]", true)
      println "* Repository [${it.name}] imported"
    } else {
      println "* Repository [${it.name}] already exists, not imported"
    }
  }
} else if (request.delete == "1") {
  def repoData = xwiki.queryManager.xwql("from doc.object(GitHubCode.RepositoryClass) as repo").execute()
  repoData.each() {
    xwiki.getDocument(it).deleteDocument()
    println "* Repository [${it}] deleted"
  }
} else {
  println "{{html}}"
  println "&lt;form&gt;"
  println "  Organization from which to import Repositories: &lt;input type='text' name='organization' /&gt;"
  println "  &lt;input type='submit' value='Import' /&gt;"
  println "&lt;/form&gt;"
  println "{{/html}}"
}

def repoData = xwiki.queryManager.xwql("select distinct repo.organization, repo.id, repo.name, repo.giturl, repo.htmlurl from Document doc, doc.object(GitHubCode.RepositoryClass) as repo").execute()
if (repoData.size() &gt; 0) {
  println "|=Organization|=Id|=Name|=Git URL|=HTML URL"
  repoData.each() {
    println "|${it[0]}|${it[1]}|${it[2]}|${it[3]}|${it[4]}"
  }
  println ""
  println "[[Delete all repositories&gt;&gt;||queryString='delete=1']]"
}
{{/groovy}}</content></xwikidoc>
