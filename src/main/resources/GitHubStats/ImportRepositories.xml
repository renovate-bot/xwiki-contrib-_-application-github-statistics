<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>GitHubStats</web>
  <name>ImportRepositories</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>GitHubStats.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1329502417000</creationDate>
  <date>1329508313000</date>
  <contentUpdateDate>1329508313000</contentUpdateDate>
  <version>1.1</version>
  <title>Import Repositories</title>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>Import repositories from GitHub into this wiki.

{{groovy}}
import groovy.json.*

if (request.organization != null) {
  // Perform the import (by default the API will only import 30 repos which is why we need use per_page)
  def url = "https://api.github.com/users/${request.organization}/repos?per_page=1000".toURL().text
  def reposJSON = new JsonSlurper().parseText(url)

  reposJSON.each() {
    // Create new page to represent the imported Repository
    def repoDoc = xwiki.getDocument("GitHubStats", "${it.name} Repository")
    if (repoDoc.isNew()) {
      repoDoc.setTitle("Repository for [${it.name}]")
      repoDoc.setParent("GitHubStats.WebHome")
      def repoObject = repoDoc.newObject("GitHubStats.RepositoryClass")
      repoObject.set("id", it.name)
      repoObject.set("giturl", it.git_url)
      repoObject.set("htmlurl", it.html_url)
      repoObject.set("name", it.name)
      repoObject.set("organization", request.organization)
      repoDoc.save("Imported Repository [${it.name}]", true)
      println "* Repository [${it.name}] imported"
    } else {
      println "* Repository [${it.name}] already exists, not imported"
    }
  }
} else if (request.delete == "1") {
  def repoData = xwiki.queryManager.xwql("from doc.object(GitHubStats.RepositoryClass) as repo").execute()
  repoData.each() {
    xwiki.getDocument(it).deleteDocument()
    println "* Repository [${it}] deleted"
  }
} else {
  println "{{html}}"
  println "&lt;form&gt;"
  println "  Organization from which to import Repositories: &lt;input type='text' name='organization' /&gt;"
  println "  &lt;input type='submit' value='Import' /&gt;"
  println "&lt;/form&gt;"
  println "{{/html}}"
  println ""
  println "[[Delete all repositories&gt;&gt;||queryString='delete=1']]"
}
{{/groovy}}

{{include reference="GitHubStats.ListRepositories"/}}</content>
</xwikidoc>
